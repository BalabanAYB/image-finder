{"version":3,"sources":["utils/utils.module.css","Components/ImageForm/ImageForm.module.css","Components/Footer/Footer.tsx","Components/Header/Header.tsx","api/api.ts","state/image-reducer.ts","Components/SomeTag/SomeTags.tsx","Components/ImagePage/ImageCard/ImageCard.tsx","Components/ImagePage/ImagePage.tsx","utils/Pagination.tsx","Components/ImageForm/ImageForm.tsx","Components/ImagePage/ImagePageContainer.tsx","Components/SavedImagePage/SavedImagePage.tsx","Components/Nav/Nav.tsx","App.tsx","reportWebVitals.ts","state/store.ts","index.tsx","Components/ImagePage/ImagePage.module.css","Components/ImagePage/ImageCard/ImageCard.module.css","Components/Nav/Nav.module.css"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","fontSize","Footer","classes","React","useState","anchorEl","Boolean","id","className","style","footer","AppBar","position","Toolbar","Typography","variant","Header","auth","setAnchorEl","open","handleClose","header","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","color","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","instance","axios","create","baseURL","imageAPI","searchText","page","size","get","then","res","data","SET_IMAGES","RESET","SAVE_COUNT","setSaveCount","count","type","initialState","photos","totalCount","currentPageCount","pages","ImageReducer","state","action","payload","photo","map","item","owner","farm","ispublic","isfriend","isfamily","src","server","secret","total","SomeTags","tags","setTags","someTags","editMode","setEditMode","editTags","setEditTags","useEffect","autoFocus","onChange","e","value","onBlur","onDoubleClick","ImageCard","deleteButton","setRemove","save","setSave","isRemove","setIsRemove","cardId","localStorage","getItem","localSave","JSON","parse","newSaveCard","setItem","stringify","deleteId","filter","cardContainer","cardImg","button","Button","undefined","countSave","ImagePage","photoGroup","remove","localCount","Number","length","display","flexDirection","alignItems","margin","Pagination","setCurrentPageCount","paginator","ButtonGroup","disabled","FormRedux","reduxForm","form","handleSubmit","formSearch","onSubmit","Field","name","placeholder","component","ImageForm","setSearchText","formData","image","backdrop","zIndex","drawer","connect","images","getImages","text","dispatch","a","response","stat","console","log","reset","PageSizeCount","load","setLoad","delayDebounceFn","setTimeout","clearTimeout","container","Backdrop","CircularProgress","setPhotos","height","appBar","width","flexShrink","drawerPaper","drawerContainer","overflow","marginTop","drawerItem","justifyContent","padding","iconItem","minWidth","content","setLocalCount","nav","Drawer","paper","List","index","ListItem","ListItemIcon","activeClassName","active","to","Badge","badgeContent","App","exact","path","ImagePageContainer","SavedImagePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a342b94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"utils_paginator__dA7GI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSearch\":\"ImageForm_formSearch__2Pk_A\"};","import React from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport style from './Footer.module.css'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n\t  fontSize: '14px'\n    },\n  }),\n);\n\nconst Footer: React.FC = () => {\n\n\tconst classes = useStyles();\n\tconst [auth, setAuth] = React.useState(true);\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\tconst open = Boolean(anchorEl);\n\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t  setAuth(event.target.checked);\n\t};\n\n\tconst handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n\t  setAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t  setAnchorEl(null);\n\t};\n\n\treturn <div id='footer' className={`${classes.root} ${style.footer}`}>\n\t<AppBar position=\"static\">\n\t  <Toolbar>\n\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t  Copyrights\n\t\t</Typography>\n\t  </Toolbar>\n\t</AppBar>\n  </div>\n}\n\nexport default Footer\n","import React from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport style from './Header.module.css'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nconst Header: React.FC = () => {\n\n\tconst classes = useStyles();\n\tconst [auth, setAuth] = React.useState(true);\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\tconst open = Boolean(anchorEl);\n\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t  setAuth(event.target.checked);\n\t};\n\n\tconst handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n\t  setAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t  setAnchorEl(null);\n\t};\n\n\treturn <div id='header' className={`${classes.root} ${style.header}`}>\n\t<AppBar position=\"static\">\n\t  <Toolbar>\n\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t  Image Finder\n\t\t</Typography>\n\t\t{auth && (\n\t\t  <div>\n\t\t\t<IconButton\n\t\t\t  aria-label=\"account of current user\"\n\t\t\t  aria-controls=\"menu-appbar\"\n\t\t\t  aria-haspopup=\"true\"\n\t\t\t  onClick={handleMenu}\n\t\t\t  color=\"inherit\"\n\t\t\t>\n\t\t\t  <AccountCircle />\n\t\t\t</IconButton>\n\t\t\t<Menu\n\t\t\t  id=\"menu-appbar\"\n\t\t\t  anchorEl={anchorEl}\n\t\t\t  anchorOrigin={{\n\t\t\t\tvertical: 'top',\n\t\t\t\thorizontal: 'right',\n\t\t\t  }}\n\t\t\t  keepMounted\n\t\t\t  transformOrigin={{\n\t\t\t\tvertical: 'top',\n\t\t\t\thorizontal: 'right',\n\t\t\t  }}\n\t\t\t  open={open}\n\t\t\t  onClose={handleClose}\n\t\t\t>\n\t\t\t  <MenuItem onClick={handleClose}>Profile</MenuItem>\n\t\t\t  <MenuItem onClick={handleClose}>My account</MenuItem>\n\t\t\t</Menu>\n\t\t  </div>\n\t\t)}\n\t  </Toolbar>\n\t</AppBar>\n  </div>\n}\n\nexport default Header\n","import axios from 'axios'\n\nconst api_key = 'ebd38066d5f0ccb4c766685e03dce652'\n\nconst instance = axios.create({\n\tbaseURL: 'https://www.flickr.com/services/rest/'\n})\n\nexport const imageAPI = {\n\tsearchImage (searchText: string, page: number, size: number) {\n\t\treturn instance.get(`?method=flickr.photos.search&api_key=${api_key}&text=${searchText}&page=${page}&per_page=${size}&format=json&nojsoncallback=1`)\n\t\t.then(res => res.data)\n\t},\n\tgetImages (serverId: string, id: string, secret: string) {\n\t\treturn axios.get(`https://live.staticflickr.com/${serverId}/${id}_${secret}.jpg`)\n\t\t.then(res => res.data)\n\t}\n}\n","import { Dispatch } from 'redux';\nimport { imageAPI } from '../api/api';\n\nconst SET_IMAGES = 'SET_IMAGES';\nconst RESET = 'RESET';\nconst SAVE_COUNT = 'SAVE_COUNT';\n\ntype PayloadType = {\n\ttotal: number;\n\tpage: number;\n\tperpage: number;\n\tphoto: Array<PhotoType>;\n\tpages: number;\n};\n\ntype GetImagesActionType = {\n\ttype: typeof SET_IMAGES;\n\tpayload: PayloadType;\n};\n\nexport type ResetActionType = {\n\ttype: typeof RESET;\n};\n\nexport type SaveCountActionType = {\n\ttype: typeof SAVE_COUNT;\n\tcount: number;\n};\n\nconst setImages = (payload: PayloadType): GetImagesActionType => ({ type: SET_IMAGES, payload });\nexport const reset = (): ResetActionType => ({ type: RESET });\nexport const setSaveCount = (count: number): SaveCountActionType => ({ type: SAVE_COUNT, count });\n\nexport const getImages = (text: string, page: number, size: number) => async (dispatch: Dispatch<ActionTypes>) => {\n\tconst response = await imageAPI.searchImage(text, page, size);\n\tif (response.stat === 'ok') {\n\t\tdispatch(setImages(response.photos));\n\t}\n\tconsole.log(response.photos);\n};\n\nexport type PhotoType = {\n\tid: string;\n\towner: string;\n\tfarm: number;\n\ttitle: string;\n\tispublic: number;\n\tisfriend: number;\n\tisfamily: number;\n\tsrc?: string | undefined;\n\tserver?: string;\n\tsecret?: string;\n\ttags?: string | null;\n};\n\ntype ActionTypes = GetImagesActionType | SaveCountActionType;\n\nexport type InitialStateType = {\n\tphotos: Array<PhotoType> | null;\n\ttotalCount: number | null;\n\tcurrentPageCount: number | null;\n\tpages: number | null;\n\tcount: number | null;\n};\n\nconst initialState: InitialStateType = {\n\tphotos: null,\n\ttotalCount: null,\n\tcurrentPageCount: null,\n\tpages: null,\n\tcount: 0\n};\n\nconst ImageReducer = (state = initialState, action: ActionTypes | ResetActionType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase SET_IMAGES: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tphotos: [\n\t\t\t\t\t...action.payload.photo.map((item: PhotoType) => ({\n\t\t\t\t\t\tid: item.id,\n\t\t\t\t\t\towner: item.owner,\n\t\t\t\t\t\tfarm: item.farm,\n\t\t\t\t\t\ttitle: item.title,\n\t\t\t\t\t\tispublic: item.ispublic,\n\t\t\t\t\t\tisfriend: item.isfriend,\n\t\t\t\t\t\tisfamily: item.isfamily,\n\t\t\t\t\t\tsrc: `https://live.staticflickr.com/${item.server}/${item.id}_${item.secret}.jpg`\n\t\t\t\t\t}))\n\t\t\t\t],\n\t\t\t\ttotalCount: action.payload.total,\n\t\t\t\tcurrentPageCount: action.payload.page,\n\t\t\t\tpages: action.payload.pages\n\t\t\t};\n\t\t}\n\t\tcase RESET: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tphotos: null,\n\t\t\t\ttotalCount: null,\n\t\t\t\tcurrentPageCount: null,\n\t\t\t\tpages: null\n\t\t\t};\n\t\t}\n\n\t\tcase SAVE_COUNT: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcount: action.count\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default ImageReducer;\n","import React, { useState, useEffect, ChangeEvent } from 'react';\n\ntype PropsType = {\n\ttags: string;\n\tsomeTags: string | null | undefined;\n\tsetTags: (text: string) => void;\n};\n\nconst SomeTags: React.FC<PropsType> = ({ tags, setTags, someTags }) => {\n\tlet [editMode, setEditMode] = useState(false);\n\tlet [editTags, setEditTags] = useState(tags);\n\n\tuseEffect(() => {\n\t\tsetTags(editTags);\n\t}, [editTags]);\n\n\tconst activeEditMode = () => {\n\t\tsetEditMode(true);\n\t};\n\n\tconst deActiveEditMode = () => {\n\t\tsetEditMode(false);\n\t\tif (setTags) {\n\t\t\tsetTags(editTags);\n\t\t}\n\t};\n\n\tconst onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetEditTags(e.currentTarget.value);\n\t};\n\n\tif (!editMode) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<span onDoubleClick={activeEditMode}>{tags ? tags : someTags}</span>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<input autoFocus onChange={onStatusChange} onBlur={deActiveEditMode} type=\"text\" value={editTags} />\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default SomeTags;\n","import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport style from './ImageCard.module.css';\nimport SomeTags from '../../SomeTag/SomeTags';\nimport { PhotoType, SaveCountActionType } from '../../../state/image-reducer';\n\ntype PropsType = {\n\ttitle: string;\n\tsomeTags?: string | null;\n\tsrc: string;\n\tid: string;\n\tcount?: number | null | undefined;\n\tdeleteButton?: boolean;\n\tsetRemove?: (check: true | false) => void;\n\tsetSaveCount?: (count: number) => SaveCountActionType;\n};\n\ntype SaveCardNewType = {\n\ttags: string;\n\tsrc: string;\n\tid: string;\n};\n\nconst ImageCard: React.FC<PropsType> = ({ title, src, deleteButton, id, setRemove, someTags, setSaveCount, count }) => {\n\tconst [save, setSave] = useState(false);\n\tconst [isRemove, setIsRemove] = useState(false);\n\tconst [cardId, setCardId] = useState(id);\n\tconst [editMode, setEditMode] = useState(false);\n\tconst [tags, setTags] = useState(title);\n\tconst [localCount, setLocalCount] = useState(localStorage.getItem('countLocalSave'));\n\n\tuseEffect(() => {\n\t\tlet localSave: any = localStorage.getItem('savedPhotos');\n\t\tif (typeof localSave === 'string') {\n\t\t\tlocalSave = JSON.parse(localSave);\n\t\t}\n\t\tif (save) {\n\t\t\tconst newSaveCard: SaveCardNewType = { tags, src, id };\n\t\t\tif (localSave) {\n\t\t\t\tlocalStorage.setItem('savedPhotos', JSON.stringify([...localSave, newSaveCard]));\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem('savedPhotos', JSON.stringify([{ tags, src, id }]));\n\t\t\t}\n\t\t\tsetSave(false);\n\t\t} else if (isRemove) {\n\t\t\tif (setRemove) {\n\t\t\t\tsetRemove(false);\n\t\t\t\tsetIsRemove(false);\n\t\t\t\tconst deleteId = id;\n\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t'savedPhotos',\n\t\t\t\t\tJSON.stringify([...localSave.filter((item: PhotoType) => item.id !== deleteId)])\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (editMode) {\n\t\t}\n\t}, [save, isRemove, cardId, setTags, tags, count]);\n\n\tconst saved = () => {\n\t\tif (deleteButton && setRemove) {\n\t\t\tsetRemove(true);\n\t\t\tsetIsRemove(true);\n\t\t\tif (count !== undefined && count !== null && setSaveCount) {\n\t\t\t\tconst countSave: number = count - 1;\n\t\t\t\tsetSaveCount(countSave);\n\t\t\t\tlocalStorage.setItem('countLocalSave', JSON.stringify(countSave));\n\t\t\t}\n\t\t} else {\n\t\t\tsetSave(true);\n\t\t\tif (setSaveCount && count !== undefined && count !== null) {\n\t\t\t\tconst countSave = count + 1;\n\t\t\t\tsetSaveCount(countSave);\n\t\t\t\tlocalStorage.setItem('countLocalSave', JSON.stringify(countSave));\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={style.cardContainer}>\n\t\t\t<img className={style.cardImg} src={src} />\n\t\t\t<div className={style.button}>\n\t\t\t\t<Button onClick={saved} variant=\"contained\" color=\"primary\">\n\t\t\t\t\t{deleteButton ? 'Remove it!' : 'Bookmark it!'}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<div className={style.title}>\n\t\t\t\t<SomeTags someTags={someTags} tags={tags} setTags={setTags} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ImageCard;\n","import React, { useEffect, useState } from 'react';\nimport { SaveCountActionType } from '../../state/image-reducer';\nimport ImageCard from './ImageCard/ImageCard';\nimport style from './ImagePage.module.css';\nimport { PropsPageType } from './ImagePageContainer';\n\ntype PropsSaveType = {\n\tphotos: null | undefined;\n\tdeleteButton?: boolean;\n\tremove?: boolean;\n\tcount?: number | null | undefined;\n\tsetRemove?: (check: true | false) => void;\n\tsetSaveCount?: (count: number) => SaveCountActionType;\n};\nconst ImagePage: React.FC<PropsPageType | PropsSaveType> = ({\n\tphotos,\n\tdeleteButton,\n\tremove,\n\tsetRemove,\n\tsetSaveCount,\n\tcount\n}) => {\n\tlet photoGroup: any;\nconst localCount = Number(localStorage.getItem('countLocalSave'))\nif (localCount && setSaveCount) {\n\tsetSaveCount(localCount);\n}\n\n\n\tif (photos?.length) {\n\t\tphotoGroup = photos.map(photo => (\n\t\t\t<ImageCard\n\t\t\t\tcount={count}\n\t\t\t\tsetSaveCount={setSaveCount}\n\t\t\t\tsetRemove={setRemove}\n\t\t\t\tdeleteButton={deleteButton}\n\t\t\t\tid={photo.id}\n\t\t\t\tkey={photo.id}\n\t\t\t\tsrc={photo.src ? photo.src : ''}\n\t\t\t\tsomeTags={photo.tags ? photo.tags : null}\n\t\t\t\ttitle={photo.title ? photo.title : ''}\n\t\t\t/>\n\t\t));\n\t}\n\n\treturn <div className={style.page}>{photoGroup}</div>;\n};\n\nexport default ImagePage;\n","import React from 'react'\nimport style from './utils.module.css'\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }),\n);\n\n\ntype PropsType = {\n\tcurrentPageCount: number,\n\tsetCurrentPageCount: any,\n\tpages?: number | null\n}\n\n\nconst Pagination: React.FC<PropsType> = ({currentPageCount, setCurrentPageCount, pages}) => {\n\n\tconst classes = useStyles();\n\n\treturn <div className={style.paginator} >\n<ButtonGroup color=\"primary\" aria-label=\"contained primary button group\">\n  <Button disabled={currentPageCount === 1} onClick={() => setCurrentPageCount(currentPageCount - 1)} >&lt;Back</Button>\n  <Button>{`${currentPageCount} of ${pages}`}</Button>\n  <Button disabled={currentPageCount === pages} onClick={() => setCurrentPageCount(currentPageCount + 1)} >Forward&gt;</Button>\n</ButtonGroup>\n\t</div>\n}\n\nexport default Pagination\n","import React from 'react';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\nimport style from './ImageForm.module.css';\n\ntype ImageFormValuesType = {\n\timage: string;\n};\n\ntype OwnPropsType = {\n\tsetSearchText: (text: string) => any;\n\tsetCurrentPageCount: (text: number) => any;\n};\n\nconst Form: React.FC<InjectedFormProps<ImageFormValuesType>> = ({ handleSubmit }) => {\n\treturn (\n\t\t<form className={style.formSearch} onSubmit={handleSubmit}>\n\t\t\t<Field name={'image'} placeholder='\nEnter the photo you are looking for...' component={'input'} />\n\t\t</form>\n\t);\n};\n\nconst FormRedux = reduxForm<ImageFormValuesType>({ form: 'image' })(Form);\n\nconst ImageForm: React.FC<OwnPropsType> = ({ setSearchText, setCurrentPageCount }) => {\n\tconst onSubmit = (formData: ImageFormValuesType) => {\n\t\tsetCurrentPageCount(1)\n\t\tsetSearchText(formData.image);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<FormRedux onChange={onSubmit} />\n\t\t</div>\n\t);\n};\n\nexport default ImageForm;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getImages, PhotoType, reset, ResetActionType, SaveCountActionType, setSaveCount } from '../../state/image-reducer';\nimport { AppStateType } from '../../state/store';\nimport ImagePage from './ImagePage';\nimport Pagination from '../../utils/Pagination';\nimport style from './ImagePage.module.css';\nimport ImageForm from '../ImageForm/ImageForm';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\n\nexport type PropsPageType = MapStatePropsType & MapDispatchPropsType & OwnPropsType;\n\ntype MapStatePropsType = {\n\tphotos: Array<PhotoType> | null;\n\tpages?: number | null;\n\tremove?: boolean;\n\tcount?: number | null;\n\tsetRemove?: (check: boolean) => void;\n};\n\ntype MapDispatchPropsType = {\n\tgetImages?: (text: string, count: number, size: number) => any;\n\treset?: () => ResetActionType;\n\tsetSaveCount?: (count: number) => SaveCountActionType;\n};\n\ntype OwnPropsType = {\n\tdeleteButton?: boolean;\n};\n\nconst ImagePageContainer: React.FC<PropsPageType> = ({ photos, getImages, pages, reset, setSaveCount, count }) => {\n\tconst [currentPageCount, setCurrentPageCount] = useState(1);\n\tconst [PageSizeCount, setPageSizeCount] = useState(30);\n\tconst [searchText, setSearchText] = useState('');\n\tconst [load, setLoad] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (getImages) {\n\t\t\tif (searchText !== '') {\n\t\t\t\tconst delayDebounceFn = setTimeout(() => {\n\t\t\t\t\tsetLoad(true)\n\t\t\t\t\tgetImages(searchText, currentPageCount, PageSizeCount).then(() => setLoad(false))\n\t\t\t\t}, 500);\n\t\t\t\treturn () => {\n\t\t\t\t\tclearTimeout(delayDebounceFn);\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tif (reset) {\n\t\t\t\t\treset();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [currentPageCount, searchText]);\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={style.container}>\n\t\t\t<Backdrop className={classes.backdrop} open={load}>\n\t\t\t\t<CircularProgress color=\"inherit\" />\n\t\t\t</Backdrop>\n\t\t\t<ImageForm setCurrentPageCount={setCurrentPageCount} setSearchText={setSearchText} />\n\t\t\t{searchText === '' || photos === null || pages === 0 ? (\n\t\t\t\t<div>No images here. Would you try search for anything else?</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t{' '}\n\t\t\t\t\t<Pagination\n\t\t\t\t\t\tpages={pages}\n\t\t\t\t\t\tcurrentPageCount={currentPageCount}\n\t\t\t\t\t\tsetCurrentPageCount={setCurrentPageCount}\n\t\t\t\t\t/>\n\t\t\t\t\t<ImagePage count={count} setSaveCount={setSaveCount} photos={photos} />\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\n\tphotos: state.images.photos,\n\tpages: state.images.pages,\n\tcount: state.images.count\n});\n\nexport default connect(mapStateToProps, { getImages, reset, setSaveCount })(ImagePageContainer);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport ImagePage from '../ImagePage/ImagePage';\nimport { SaveCountActionType, setSaveCount } from '../../state/image-reducer';\nimport style from '../ImagePage/ImagePage.module.css';\nimport { AppStateType } from '../../state/store';\n\ntype PropsType = MapStatePropsType & MapDispatchPropsType;\n\ntype MapStatePropsType = {\n\tcount: number | null;\n}\n\ntype MapDispatchPropsType = {\n\tsetSaveCount: (count: number) =>  SaveCountActionType ;\n}\n\nconst SavedImagePage: React.FC<PropsType> = ({count, setSaveCount}) => {\n\tconst [photos, setPhotos] = useState(null);\n\tconst [remove, setRemove] = useState(false);\n\tconst deleteButton = true;\n\n\tuseEffect(() => {\n\t\tlet localSave: string | null = localStorage.getItem('savedPhotos');\n\t\tif (typeof localSave === 'string') {\n\t\t\tsetPhotos(JSON.parse(localSave));\n\t\t}\n\t}, [remove, count]);\n\n\treturn (\n\t\t<div className={style.container}>\n\t\t\t <ImagePage\n\t\t\t\tcount={count}\n\t\t\t\tsetSaveCount={setSaveCount}\n\t\t\t\tremove={remove}\n\t\t\t\tsetRemove={setRemove}\n\t\t\t\tdeleteButton={deleteButton}\n\t\t\t\tphotos={photos}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\n\tcount: state.images.count\n});\n\nexport default connect(mapStateToProps, { setSaveCount })(SavedImagePage);\n","import React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\nimport Badge from '@material-ui/core/Badge';\nimport style from './Nav.module.css';\nimport { AppStateType } from '../../state/store';\nimport { connect } from 'react-redux';\nconst drawerWidth = 60;\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tdisplay: 'flex',\n\t\t\theight: '100%'\n\t\t},\n\t\tappBar: {\n\t\t\tzIndex: theme.zIndex.drawer + 1\n\t\t},\n\t\tdrawer: {\n\t\t\twidth: drawerWidth,\n\t\t\tflexShrink: 0\n\t\t},\n\t\tdrawerPaper: {\n\t\t\twidth: drawerWidth,\n\t\t\tposition: 'relative'\n\t\t},\n\t\tdrawerContainer: {\n\t\t\toverflow: 'none',\n\t\t\twidth: '60px',\n\t\t\theight: '100%',\n\t\t\tmarginTop: '64px',\n\t\t\tposition: 'fixed'\n\t\t},\n\t\tdrawerItem: {\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t\tpadding: '8px 0'\n\t\t},\n\n\t\ticonItem: {\n\t\t\tminWidth: 'auto'\n\t\t},\n\t\tcontent: {\n\t\t\tflexGrow: 1,\n\t\t\tpadding: theme.spacing(3)\n\t\t}\n\t})\n);\n\ntype MapStatePropsType = {\n\tcount: number | null;\n};\n\nlet Nav: React.FC<MapStatePropsType> = ({ count }) => {\n\tconst classes = useStyles();\n\n\tconst [localCount, setLocalCount] = useState(localStorage.getItem('countLocalSave'));\n\n\tuseEffect(() => {\n\t\tsetLocalCount(localStorage.getItem('countLocalSave'));\n\t}, [count]);\n\n\treturn (\n\t\t<div id=\"nav\" className={`${classes.root} ${style.nav}`}>\n\t\t\t<Drawer\n\t\t\t\tclassName={classes.drawer}\n\t\t\t\tvariant=\"permanent\"\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: classes.drawerPaper\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className={classes.drawerContainer}>\n\t\t\t\t\t<List>\n\t\t\t\t\t\t{['', ''].map((text, index) => (\n\t\t\t\t\t\t\t<ListItem className={classes.drawerItem} button key={text}>\n\t\t\t\t\t\t\t\t<ListItemIcon className={classes.iconItem}>\n\t\t\t\t\t\t\t\t\t{index % 2 === 0 ? (\n\t\t\t\t\t\t\t\t\t\t<NavLink activeClassName={style.active} to=\"/search\">\n\t\t\t\t\t\t\t\t\t\t\t<CloudIcon />\n\t\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<NavLink activeClassName={style.active} to=\"/save_image\">\n\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\t<Badge badgeContent={localCount} color=\"secondary\">\n\t\t\t\t\t\t\t\t\t\t\t\t<BookmarksIcon />\n\t\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</List>\n\t\t\t\t</div>\n\t\t\t</Drawer>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\n\tcount: state.images.count\n});\n\nexport default connect(mapStateToProps, {})(Nav);\n","import React from 'react';\nimport {Route} from \"react-router-dom\";\nimport './App.css';\nimport Footer from './Components/Footer/Footer';\nimport Header from './Components/Header/Header';\nimport ImagePageContainer from './Components/ImagePage/ImagePageContainer';\nimport SavedImagePage from './Components/SavedImagePage/SavedImagePage';\nimport Nav from './Components/Nav/Nav'\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <div className=\"App\">\n\t\t<Header />\n\t\t<Nav />\n\t\t<div id='content' className='content'>\n\t\t\t<Route exact path='/' component={ImagePageContainer} />\n\t\t\t<Route exact path='/search' component={ImagePageContainer} />\n\t\t\t<Route exact path='/save_image' component={SavedImagePage} />\n\t\t</div>\n\t\t<Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport ImageReducer from './image-reducer';\n\nconst reducers = combineReducers({\n\timages: ImageReducer,\n\tform: formReducer\n});\n\ntype RootReducerType = typeof reducers;\n\nexport type AppStateType = ReturnType<RootReducerType>;\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './state/store';\n\nReactDOM.render(\n  <React.StrictMode>\n\t  <Provider store={store}>\n\t  <HashRouter>\n            <App />\n            </HashRouter>\n\t  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ImagePage_container__yQvQF\",\"page\":\"ImagePage_page__67Yr_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"ImageCard_cardContainer__3iI71\",\"cardImg\":\"ImageCard_cardImg__3BMv0\",\"button\":\"ImageCard_button__1Z9Ty\",\"title\":\"ImageCard_title__3PuX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Nav_active__3N5D-\"};"],"sourceRoot":""}